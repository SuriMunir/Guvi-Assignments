Day 8 Assignment 

Question 1.

class Movie {
  constructor(title, studio, rating = 'PG') {
    if (
      typeof title !== 'string' ||
      typeof studio !== 'string' ||
      typeof rating !== 'string'
    ) {
      throw new Error('Inputs should be of string type');
    }

    this.title = title;
    this.studio = studio;
    this.rating = rating;
  }

  static getPG(arr) {
    return arr.filter((x) => x.rating === 'PG');
  }
}

let movie1 = new Movie('Casino Royale', 'Eon Productions', 'PG13');

console.log(movie1);

let movieData = [
  {
    title: 'Bam Bam Bhole',
    studio: 'Bholenath Production',
    rating: 'G',
  },
  {
    title: 'Sholay',
    studio: 'Dharma Productions',
    rating: 'PG',
  },
  {
    title: 'Batman',
    studio: 'Universal Studios',
    rating: 'PG',
  },
  {
    title: 'Battle of the super sons',
    studio: 'Warner Bros',
    rating: 'PG-13',
  },
  {
    title: 'Deep in the forest',
    studio: 'Saban Films',
    rating: 'R',
  },
  {
    title: 'Jurassic Tale',
    studio: 'Grindstone Entertainment Group',
    rating: 'PG',
  },
];

let pgMovies = Movie.getPG(movieData);
console.log(pgMovies);


Question 2:

class Circle {
  constructor(radius, color) {
    this.radius = parseFloat(radius);
    this.color = color;
  }

  getRadius() {
    return this.radius;
  }

  setRadius(radius) {
    this.radius = parseFloat(radius);
  }

  getColor() {
    return this.color;
  }

  setColor(color) {
    this.color = color;
  }

  getArea() {
    const PI = Math.PI;
    return PI * this.radius * this.radius;
  }

  getCircumference() {
    const PI = Math.PI;
    return 2 * PI * this.radius;
  }
}

let circle1 = new Circle(10, 'blue');
let circle2 = new Circle(6, 'green');
let circle3 = new Circle(20, 'purple');

console.log(circle1);
console.log(circle2);
console.log(circle3);

console.log(circle1.getColor());
console.log(circle2.getRadius());

circle1.setColor('red');
circle2.setRadius(100);

console.log(circle1);
console.log(circle2);

console.log(
  `The area of circle1 is ${circle1
    .getArea()
    .toFixed(2)} , of circle2 is ${circle2
    .getArea()
    .toFixed(2)}, of circle3 is ${circle3.getArea().toFixed(2)}`
);

console.log(
  `The circumference of circle1 is ${circle1
    .getCircumference()
    .toFixed(2)} , of circle2 is ${circle2
    .getCircumference()
    .toFixed(2)}, of circle3 is ${circle3.getCircumference().toFixed(2)}`
);


Question 3: Person Class

class Person {
  constructor(firstName, lastName, age, gender, profession, city) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = parseInt(age);
    this.gender = gender;
    this.profession = profession;
    this.city = city;
  }

  toString() {
    return `Hi I am ${this.firstName} ${this.lastName}. I am ${this.age} years old ${this.gender} working as a ${this.profession} in ${this.city}`;
  }

  getFullName() {
    return this.firstName + ' ' + this.lastName;
  }

  getAge() {
    return this.age;
  }

  setAge(value) {
    this.age === parseInt(value);
  }
}

let ms = new Person(
  'Munir',
  'Suri',
  52,
  'Male',
  'Head Sales and Marketing',
  'New Delhi'
);


console.log(ms.toString());

Question 4:

class TaxiPrice {
  constructor(type, grade, kms, pickTime) {
    this.type = type;
    this.grade = grade;
    this.kms = parseFloat(kms);
    this.pickTime = parseFloat(pickTime);
  }

  getBaseFare() {
    if (this.type === 'bike') {
      return 4.25;
    } else if (this.type === 'car') {
      return 7.5;
    }
  }

  getGradeMarkup() {
    if (this.grade === 'normal') {
      return 1;
    } else if (this.grade === 'premium') {
      return 1.15;
    } else if (this.grade === 'luxury') {
      return 1.35;
    }
  }

  getTimeMarkup() {
    if (this.pickTime > 22) {
      return 1.2;
    } else {
      return 1;
    }
  }

  getTripPrice() {
    return (
      this.getBaseFare() *
      this.getGradeMarkup() *
      this.getTimeMarkup() *
      (this.kms < 5 ? 5 : this.kms)
    );
  }
}

let trip1 = new TaxiPrice('car', 'luxury', 8, 23);

console.log(trip1.getTripPrice());
